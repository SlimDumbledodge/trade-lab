// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleUser {
  user
  admin
}

enum SubscriptionUser {
  free
  premium
}

enum TransactionType {
  BUY
  SELL
}

model User {
  id Int @default(autoincrement()) @id
  username String @unique
  email String @unique
  password String

  role RoleUser @default(admin)
  subscription SubscriptionUser @default(free)

  portfolio Portfolio? @relation("UserPortfolio")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Actif {
  id Int @default(autoincrement()) @id
  description String @unique
  sectorActivity String
  logo String
  symbol String @unique
  type String
  current_price Float
  highest_price_day Float
  lowest_price_day Float
  opening_price_day Float
  previous_close_price_day Float
  percent_change Float
  change Float
  portfolios PortfolioActif[]
  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id                   Int      @id @default(autoincrement()) // identifiant interne
  ticker               String   @unique                     // ex: AAPL
  name                 String                                // Apple Inc
  country              String                                // US
  currency             String                                // USD
  exchange             String                                // NASDAQ/NMS (GLOBAL MARKET)
  marketEntryDate      DateTime                              // IPO date (ex: 1980-12-12)
  marketCapitalization Float?                               // en millions USD
  sharesOutstanding    Float?                               // nombre d’actions en millions
  phone                String?                               // numéro de téléphone
  webUrl               String?                               // site officiel
  logo                 String?                               // URL du logo
  industry             String?                               // secteur (ex: Technology)

  createdAt            DateTime @default(now())              // suivi interne
  updatedAt            DateTime @updatedAt
}


model Portfolio {
  id Int @default(autoincrement()) @id

  userId Int @unique
  user User @relation("UserPortfolio", fields: [userId], references: [id])
  balance Float @default(100000)
  actifs PortfolioActif[]
  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PortfolioActif {
  id           Int     @default(autoincrement()) @id
  portfolio    Portfolio  @relation(fields: [portfolioId], references: [id])
  portfolioId  Int
  actif        Actif      @relation(fields: [actifId], references: [id])
  actifId      Int
  quantity     Float
  averagePrice Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([portfolioId, actifId])
}

model Transaction {
  id Int @default(autoincrement()) @id
  type TransactionType
  quantity Float
  priceAtExecution Float
  actif Actif @relation(fields: [actifId], references: [id])
  actifId Int
  portfolio Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}
