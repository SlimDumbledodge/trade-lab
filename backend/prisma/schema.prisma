// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleUser {
  user
  admin
}

enum SubscriptionUser {
  free
  premium
}

model User {
  id Int @default(autoincrement()) @id
  username String @unique
  email String @unique
  password String

  role RoleUser @default(admin)
  subscription SubscriptionUser @default(free)

  portfolio Portfolio? @relation("UserPortfolio")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Actif {
  id Int @default(autoincrement()) @id
  name String @unique
  symbol String @unique
  price Float
  portfolios PortfolioActif[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Portfolio {
  id Int @default(autoincrement()) @id

  userId Int @unique
  user User @relation("UserPortfolio", fields: [userId], references: [id])
  balance Float @default(100000)
  actifs PortfolioActif[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PortfolioActif {
  id           Int     @default(autoincrement()) @id
  portfolio    Portfolio  @relation(fields: [portfolioId], references: [id])
  portfolioId  Int
  actif        Actif      @relation(fields: [actifId], references: [id])
  actifId      Int
  quantity     Float
  averagePrice Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([portfolioId, actifId])
}
